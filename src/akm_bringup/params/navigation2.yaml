amcl:
  ros__parameters:
    use_sim_time: True              # 是否使用仿真时间
    alpha1: 0.2                     # 用于粒子滤波的参数
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"      # 机器人基座坐标系的名称
    beam_skip_distance: 0.5         # 激光雷达跳跃的最大距离
    beam_skip_error_threshold: 0.9  # 跳跃的错误阈值
    beam_skip_threshold: 0.3        # 跳跃的阈值
    do_beamskip: false              # 是否启用激光雷达跳跃优化
    global_frame_id: "map"          # 全局地图的坐标系名称
    lambda_short: 0.1               # 用于计算短程激光似然场的参数
    laser_likelihood_max_dist: 2.0  # 激光雷达似然场的最大距离
    laser_max_range: 100.0          # 激光雷达的最大测距范围
    laser_min_range: -1.0           # 激光雷达的最小测距范围
    laser_model_type: "likelihood_field"  # 激光雷达模型类型
    max_beams: 60                   # 最大激光雷达束数
    max_particles: 2000             # 粒子滤波器中的最大粒子数
    min_particles: 500              # 粒子滤波器中的最小粒子数
    odom_frame_id: "odom"           # 里程计坐标系的名称
    pf_err: 0.05                    # 粒子滤波器的错误
    pf_z: 0.99                      # 粒子滤波器的重采样参数
    recovery_alpha_fast: 0.0        # 快速恢复时的参数
    recovery_alpha_slow: 0.0        # 慢速恢复时的参数
    resample_interval: 1            # 重采样的间隔
    robot_model_type: "nav2_amcl::DifferentialMotionModel"  # 机器人运动模型类型
    save_pose_rate: 0.5             # 保存位姿的频率
    sigma_hit: 0.2                  # 激光雷达击中的方差
    tf_broadcast: true              # 是否广播变换
    transform_tolerance: 1.0        # 变换容忍度
    update_min_a: 0.2               # 更新的最小角度
    update_min_d: 0.25              # 更新的最小距离
    z_hit: 0.5                      # 激光雷达击中的权重
    z_max: 0.05                     # 最大权重
    z_rand: 0.5                     # 随机测量的权重
    z_short: 0.05                   # 短程激光测量的权重
    scan_topic: scan                # 激光雷达话题名称

amcl_map_client:
  ros__parameters:
    use_sim_time: True

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True

# 全局代价地图
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0  # 更新频率
      publish_frequency: 1.0  # 发布频率
      global_frame: map  # 全局地图坐标系的名称
      robot_base_frame: base_link  # 机器人基座坐标系的名称
      use_sim_time: True  # 是否使用仿真时间
      robot_radius: 0.22  # 机器人半径
      resolution: 0.05  # 分辨率
      track_unknown_space: false  # 是否跟踪未知空间
      rolling_window: false  # 是否滚动窗口
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]  # 使用的插件
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"  # 静态图层插件类型
        map_subscribe_transient_local: True
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"  # 障碍物图层插件类型
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan  # 激光雷达话题名称
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # 膨胀图层插件类型
        cost_scaling_factor: 3.0
        inflation_radius: 0.25
      always_send_full_costmap: false  # 是否始终发送完整的成本地图

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0  # 更新频率
      publish_frequency: 2.0  # 发布频率
      global_frame: odom  # 全局坐标系的名称
      robot_base_frame: base_link  # 机器人基座坐标系的名称
      use_sim_time: True  # 是否使用仿真时间
      rolling_window: true  # 是否滚动窗口
      width: 3  # 宽度
      height: 3  # 高度
      resolution: 0.05  # 分辨率
      footprint: "[ [0.21, 0.195], [0.21, -0.195], [-0.21, -0.195], [-0.21, 0.195] ]"  # 机器人足迹
      plugins: ["voxel_layer", "inflation_layer"]  # 使用的插件
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"  # 体素图层插件类型
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan  # 激光雷达话题名称
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # 膨胀图层插件类型
        cost_scaling_factor: 3.0
        inflation_radius: 0.25
      always_send_full_costmap: True  # 是否始终发送完整的成本地图

map_server:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    yaml_filename: "fishbot_map.yaml"  # 地图文件的名称

map_saver:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    save_map_timeout: 5.0  # 保存地图的超时时间
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    planner_plugins: ["GridBased"]  # 路径规划插件类型
    use_sim_time: False

    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"  # 栅格路径规划插件类型
      downsample_costmap: false  # 是否降采样地图
      downsampling_factor: 1  # 降采样因子
      allow_unknown: true  # 是否允许穿越未知空间
      max_iterations: 1000000  # 最大迭代次数
      max_planning_time: 5.0  # 最大规划时间
      motion_model_for_search: "REEDS_SHEPP"  # 搜索时使用的运动模型
      angle_quantization_bins: 72  # 角度量化箱数
      analytic_expansion_ratio: 3.5  # 分析扩展比例
      analytic_expansion_max_length: 3.0  # 分析扩展的最大长度
      minimum_turning_radius: 1.0  # 最小转弯半径
      reverse_penalty: 50.0  # 后退的惩罚
      change_penalty: 0.0  # 转向的惩罚
      non_straight_penalty: 1.2  # 非直线运动的惩罚
      cost_penalty: 3.0  # 成本惩罚
      lookup_table_size: 20.0  # 缓存的Dubin/Reeds-Shepp距离窗口的大小
      cache_obstacle_heuristic: false  # 是否缓存障碍物地图的动态规划距离扩展启发式
      smooth_path: False  # 是否平滑路径

      smoother:
        max_iterations: 1000
        w_smooth: 0.1  # 平滑权重
        w_data: 0.3  # 数据权重
        tolerance: 1e-10
        do_refinement: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间

controller_server:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    odom_topic: odom  # 里程计话题名称
    controller_frequency: 10.0  # 控制器频率
    min_x_velocity_threshold: 0.001  # 最小X轴线速度阈值
    min_y_velocity_threshold: 0.5  # 最小Y轴线速度阈值
    min_theta_velocity_threshold: 0.001  # 最小角速度阈值
    failure_tolerance: 0.3  # 失败容忍度
    progress_checker_plugin: "progress_checker"  # 进度检查器插件
    goal_checker_plugins: ["general_goal_checker"]  # 目标检查器插件
    controller_plugins: ["FollowPath"]  # 控制器插件

    # 进度检查器参数
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"  # 进度检查器插件类型
      required_movement_radius: 0.5  # 所需的移动半径
      movement_time_allowance: 10.0  # 移动时间允许值
    # 目标检查器参数
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::StoppedGoalChecker"  # 停止目标检查器插件类型
      xy_goal_tolerance: 0.1  # XY坐标目标容忍度
      yaw_goal_tolerance: 3.14  # 偏航目标容忍度
      trans_stopped_velocity: 0.03
    # 控制器插件RPP参数
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"  # 跟随路径控制器插件类型
      allow_reversing: true  # 是否允许后退
      approach_velocity_scaling_dist: 0.6  # 靠近目标时的线速度缩放距离
      cost_scaling_dist: 0.6  # 成本缩放距离
      cost_scaling_gain: 1.0  # 成本缩放增益
      desired_linear_vel: 0.5  # 期望线速度
      inflation_cost_scaling_factor: 3.0  # 膨胀层成本缩放因子
      lookahead_dist: 0.6  # 前瞻距离
      lookahead_time: 1.5  # 前瞻时间
      max_allowed_time_to_collision_up_to_carrot: 1.0  # 最大允许时间以避免与“胡萝卜”冲突
      max_angular_accel: 3.2  # 最大角加速度
      max_lookahead_dist: 0.9  # 最大前瞻距离
      max_robot_pose_search_dist: 1.4875  # 最大机器人姿态搜索距离
      min_approach_linear_velocity: 0.05  # 最小靠近线速度
      min_lookahead_dist: 0.3  # 最小前瞻距离
      regulated_linear_scaling_min_radius: 0.9  # 线性缩放最小半径
      regulated_linear_scaling_min_speed: 0.25  # 线性缩放最小速度
      transform_tolerance: 0.1  # 变换容忍度
      use_cost_regulated_linear_velocity_scaling: true  # 是否使用成本调节的线速度缩放
      use_interpolation: true  # 是否使用插值
      use_regulated_linear_velocity_scaling: true  # 是否使用调节的线速度缩放
      use_rotate_to_heading: false  # 是否旋转到目标朝向
      use_velocity_scaled_lookahead_dist: false  # 是否使用速度缩放的前瞻距离

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间

distance_controller:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    controller_plugins: ["ProportionalController"]  # 距离控制器插件类型

    ProportionalController:
      plugin: "nav2_core::ProportionalController"  # 比例控制器插件类型
      control_topic: "distance_controller"  # 控制话题名称
      use_sim_time: true  # 是否使用仿真时间
      controller_frequency: 20.0  # 控制器频率
      min_x_velocity: 0.0  # 最小X轴线速度
      max_x_velocity: 1.0  # 最大X轴线速度
      max_y_velocity: 0.0  # 最大Y轴线速度
      min_x_velocity_tolerance: 0.01  # 最小X轴线速度容忍度
      max_x_velocity_tolerance: 0.01  # 最大X轴线速度容忍度
      max_y_velocity_tolerance: 0.01  # 最大Y轴线速度容忍度
      xy_goal_tolerance: 0.1  # XY坐标目标容忍度
      stateful: true  # 是否有状态
      k_p: 0.6  # 比例系数
      k_i: 0.0  # 积分系数
      k_d: 0.0  # 微分系数

distance_controller_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间

speed_controller:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    controller_plugins: ["ProportionalController"]  # 速度控制器插件类型

    ProportionalController:
      plugin: "nav2_core::ProportionalController"  # 比例控制器插件类型
      control_topic: "speed_controller"  # 控制话题名称
      use_sim_time: true  # 是否使用仿真时间
      controller_frequency: 20.0  # 控制器频率
      min_x_velocity: 0.0  # 最小X轴线速度
      max_x_velocity: 0.5  # 最大X轴线速度
      max_y_velocity: 0.0  # 最大Y轴线速度
      min_x_velocity_tolerance: 0.01  # 最小X轴线速度容忍度
      max_x_velocity_tolerance: 0.01  # 最大X轴线速度容忍度
      max_y_velocity_tolerance: 0.01  # 最大Y轴线速度容忍度
      xy_goal_tolerance: 0.1  # XY坐标目标容忍度
      stateful: true  # 是否有状态
      k_p: 0.6  # 比例系数
      k_i: 0.0  # 积分系数
      k_d: 0.0  # 微分系数

speed_controller_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间

smoother_server:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    smoother_plugins: ["simple_smoother"]  # 平滑器插件类型
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"  # 简单平滑器插件类型
      tolerance: 1.0e-10  # 容忍度
      max_its: 1000  # 最大迭代次数
      do_refinement: True

bt_navigator:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    global_frame: map  # 全局坐标系的名称
    robot_base_frame: base_link  # 机器人基座坐标系的名称
    odom_topic: /odom  # 里程计话题名称
    bt_loop_duration: 10  # 行为树循环的持续时间
    default_server_timeout: 20  # 默认服务器超时时间
    # 'default_nav_through_poses_bt_xml' 和 'default_nav_to_pose_bt_xml' 是默认值:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # 可以在此处或通过父级启动文件到Nav2的RewrittenYaml remap中设置它们。
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间


behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw  # 成本地图话题名称
    footprint_topic: local_costmap/published_footprint  # 机器人足迹话题名称
    cycle_frequency: 10.0  # 行为循环频率
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]  # 行为插件类型
    spin:
      plugin: "nav2_behaviors/Spin"  # 旋转行为插件类型
    backup:
      plugin: "nav2_behaviors/BackUp"  # 后退行为插件类型
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"  # 按朝向行驶行为插件类型
    wait:
      plugin: "nav2_behaviors/Wait"  # 等待行为插件类型
    global_frame: odom  # 全局坐标系的名称
    robot_base_frame: base_link  # 机器人基座坐标系的名称
    transform_tolerance: 0.1  # 变换容忍度
    use_sim_time: true  # 是否使用仿真时间
    simulate_ahead_time: 2.0  # 模拟提前时间
    max_rotational_vel: 1.0  # 最大旋转速度
    min_rotational_vel: 0.4  # 最小旋转速度
    backup_dist_thresh: 0.2  # 后退距离阈值
    spin_dist_thresh: 0.2  # 旋转距离阈值
    spin_angle_thresh: 1.5708  # 旋转角度阈值
    wait_duration: 3.0  # 等待持续时间

behavior_tree_navigator:
  ros__parameters:
    bt_xml_filename: "navigate_w_replanning_and_recovery.xml"  # 行为树XML文件的名称
    use_sim_time: True  # 是否使用仿真时间

recoveries_server:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间
    recovery_plugins: ["wait", "clear_costmap", "rotate_recovery"]  # 恢复行为插件类型
    wait:
      plugin: "nav2_recoveries/Wait"  # 等待恢复插件类型
      timeout: 5.0  # 等待超时时间
    clear_costmap:
      plugin: "nav2_recoveries/ClearCostmap"  # 清除成本地图恢复插件类型
      reset_distance_threshold: 0.5  # 重置距离阈值
    rotate_recovery:
      plugin: "nav2_recoveries/RotateRecovery"  # 旋转恢复插件类型
      max_rotate_angle: 3.14  # 最大旋转角度
      min_obstacle_distance: 0.5  # 最小障碍物距离

recoveries_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True  # 是否使用仿真时间

